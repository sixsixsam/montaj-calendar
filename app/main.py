from fastapi import FastAPI, Depends
from fastapi.middleware.cors import CORSMiddleware
from datetime import datetime
from .config import settings
from .routers import (
    users,
    projects,
    statuses,
    workers,
    assignments,
    requests,
    reports,
    sections,
)
from .auth import get_user
from .firestore import db

# =====================================================
# üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# =====================================================
app = FastAPI(title="SistemaB API", version="1.0.0")

# =====================================================
# üåç CORS –ù–ê–°–¢–†–û–ô–ö–ò
# =====================================================
# –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤ (—Ñ—Ä–æ–Ω—Ç, onrender –∏ –ª–æ–∫–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞)
firebase_origins = [
    "https://sistemab-montaj-6b8c1.web.app",
    "https://sistemab-montaj.web.app",
    "https://montaj-calendar.onrender.com",
    "http://localhost:5173",  # –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ—Ä–æ–Ω—Ç
    "http://localhost:3000",
]

# –ë–µ—Ä—ë–º –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫, –µ—Å–ª–∏ –µ—Å—Ç—å (Render env), –∏–Ω–∞—á–µ ‚Äî –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
origins = [o.strip() for o in settings.ALLOWED_ORIGINS.split(",") if o.strip()] or firebase_origins

# ‚úÖ –í–ê–ñ–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ allow_origins (–±–µ–∑ regex!)
app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# =====================================================
# üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
# =====================================================
app.include_router(users.router)
app.include_router(projects.router)
app.include_router(statuses.router)
app.include_router(workers.router)
app.include_router(assignments.router)
app.include_router(requests.router)
app.include_router(reports.router)
app.include_router(sections.router)

# =====================================================
# üë§ –≠–Ω–¥–ø–æ–∏–Ω—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# =====================================================
@app.get("/me")
async def me(current_user: dict = Depends(get_user)):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ Firestore ‚Äî —Å–æ–∑–¥–∞—ë—Ç –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
    """
    uid = current_user["uid"]
    email = (current_user.get("email") or "").strip().lower()

    # üîç –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Firebase UID
    docs = db.collection("users").where("firebase_uid", "==", uid).limit(1).get()

    if docs:
        data = docs[0].to_dict()
    else:
        # üÜï –ê–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firestore
        data = {
            "firebase_uid": uid,
            "username": email,
            "email": email,
            "full_name": current_user.get("name") or "–ë–µ–∑ –∏–º–µ–Ω–∏",
            "role": "installer",
            "created_at": datetime.utcnow().isoformat(),
        }
        db.collection("users").document(email).set(data)
        print(f"[AUTO] –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Firestore: {email}")

    return {
        "uid": uid,
        "email": email,
        "full_name": data.get("full_name", current_user.get("name") or "–ë–µ–∑ –∏–º–µ–Ω–∏"),
        "role": data.get("role", "–ù–µ —É–∫–∞–∑–∞–Ω–∞"),
    }

# =====================================================
# ü©∫ Healthcheck
# =====================================================
@app.get("/health")
async def health():
    return {"ok": True}
