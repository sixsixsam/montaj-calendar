from fastapi import FastAPI, Depends
from fastapi.middleware.cors import CORSMiddleware
from .config import settings
from .routers import (
    users,
    projects,
    statuses,
    workers,
    assignments,
    requests,
    reports,
    sections,  # ‚úÖ –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å
)
from .auth import get_user
from .firestore import db

# =====================================================
# üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# =====================================================
app = FastAPI(title="SistemaB API", version="1.0.0")

# =====================================================
# üåç CORS –ù–ê–°–¢–†–û–ô–ö–ò
# =====================================================
firebase_origins = [
    "https://sistemab-montaj-6b8c1.web.app",
    "https://sistemab-montaj-6b8c1.firebaseapp.com",
    "http://localhost:5173",
]

# –ï—Å–ª–∏ –≤ ENV –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è ALLOWED_ORIGINS ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë,
# –∏–Ω–∞—á–µ fallback –Ω–∞ firebase_origins.
origins = [o.strip() for o in settings.ALLOWED_ORIGINS.split(",") if o.strip()] or firebase_origins

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_origin_regex=r".*(montaj|firebaseapp\.com|web\.app|localhost).*",
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# =====================================================
# üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
# =====================================================
app.include_router(users.router)
app.include_router(projects.router)
app.include_router(statuses.router)
app.include_router(workers.router)
app.include_router(assignments.router)
app.include_router(requests.router)
app.include_router(reports.router)
app.include_router(sections.router)  # ‚úÖ —Ç–µ–ø–µ—Ä—å /sections –¥–æ—Å—Ç—É–ø–µ–Ω

# =====================================================
# üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
# =====================================================
@app.get("/me")
async def me(current_user: dict = Depends(get_user)):
    uid = current_user["uid"]
    user_doc = db.collection("users").document(uid).get()
    data = user_doc.to_dict() or {}
    return {
        "uid": uid,
        "email": current_user.get("email"),
        "full_name": data.get("full_name", "–ë–µ–∑ –∏–º–µ–Ω–∏"),
        "role": data.get("role", "–ù–µ —É–∫–∞–∑–∞–Ω–∞"),
    }

# =====================================================
# ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è API
# =====================================================
@app.get("/health")
async def health():
    return {"ok": True}
